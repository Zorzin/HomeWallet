@model HomeWallet.Models.ProductViewModels.ProductDetailsViewModel
<script src="http://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/modules/drilldown.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>

@using System.Collections
@using Highsoft.Web.Mvc.Charts
@{
    ViewData["Title"] = "Details";
}
<br/>

<ul class="nav nav-tabs detailstab">
  <li role="presentation" class="active"><a id="detailstab" href="#">Details</a></li>
  <li role="presentation"><a id="statisticstab" href="#">Statistics</a></li>
</ul>
<br />
<div id="statisticsdiv" hidden="hidden">
    <div class="col-md-12">
        <div class="col-md-6 detailsviewnochart">
            Totally spent
        </div>
        <div class="col-md-6">
            <div class="incremental-counter totalspent" data-value="@Model.TotalSpent"></div>
        </div>
    </div>
    <hr/>
    <div class="col-md-12">
        <div class="col-md-6">
            <div class="incremental-counter timesbought" data-value="@Model.TimesBought"></div>
        </div>
        <div class="col-md-6 detailsviewnochart">
            Times bought
        </div>
    </div> 

  <hr />
  <div class="col-md-12">
    <div class="col-md-6 detailsviewnochart">
      Amount bought
    </div>
    <div class="col-md-6">
      <div class="incremental-counter amountbought" data-value="@Model.AmountBought"></div>
    </div>
  </div>
    <hr/>
    <div class="col-md-12">
        <div class="col-md-6 detailsviewnochart">
            Average cost
        </div>
        <div class="col-md-6">
            <div class="incremental-counter averagecost" data-value="@Model.AverageCost"></div>
        </div>
    </div>  
    <hr/>
    <div class="col-md-12">
        <div class="col-md-6">
           @(Html.Highsoft().Highcharts(
        new Highcharts
        {
          Title = new Title
          {
            Text = "World's largest cities per 2014"
          },
          Subtitle = new Subtitle
          {
            Text = "Source: <a href='http://en.wikipedia.org/wiki/List_of_cities_proper_by_population'>Wikipedia</a>"
          },

          XAxis = new List<XAxis>
            {
                new XAxis
                {
                    Type = XAxisType.Category
                }
            },
          YAxis = new List<YAxis>
            {
                new YAxis
                {
                    Min = 0,
                    Title = new YAxisTitle
                    {
                        Text = "Population (millions)"
                    }
                }
            },
          Legend = new Legend
          {
            Enabled = false
          },
          Tooltip = new Tooltip
          {
            PointFormat = "Population in 2008: <b>{point.y:.1f} millions</b>"
          },
          Series = new List<Series>
            {
                new ColumnSeries
                {
                    Name = "Population",
                    DataLabels = new ColumnSeriesDataLabels
                    {
                        Enabled = true,
                        Rotation = -90,
                        Color = "#FFFFFF",
                        Align = ColumnSeriesDataLabelsAlign.Right,
                        Format = "{point.y:.1f}",
                        Y = 10
                    },
                    Data = @ViewData["TimesData"] as List<ColumnSeriesData>
                }
            }
        }
        , "chart")
          )
        </div>
        <div class="col-md-6 detailsviewchart">
            Times bought in shops
        </div>
    </div>
    <hr />
    <div class="col-md-12">
        <div class="col-md-6 detailsviewchart">
            Average cost in shops
        </div>
        <div class="col-md-6">
            @(Html.Highsoft().Highcharts(
        new Highcharts
        {
          Title = new Title
          {
            Text = "World's largest cities per 2014"
          },
          Subtitle = new Subtitle
          {
            Text = "Source: <a href='http://en.wikipedia.org/wiki/List_of_cities_proper_by_population'>Wikipedia</a>"
          },

          XAxis = new List<XAxis>
            {
                new XAxis
                {
                    Type = XAxisType.Category
                }
            },
          YAxis = new List<YAxis>
            {
                new YAxis
                {
                    Min = 0,
                    Title = new YAxisTitle
                    {
                        Text = "Population (millions)"
                    }
                }
            },
          Legend = new Legend
          {
            Enabled = false
          },
          Tooltip = new Tooltip
          {
            PointFormat = "Population in 2008: <b>{point.y:.1f} millions</b>"
          },
          Series = new List<Series>
            {
                new ColumnSeries
                {
                    Name = "Population",
                    DataLabels = new ColumnSeriesDataLabels
                    {
                        Enabled = true,
                        Rotation = -90,
                        Color = "#FFFFFF",
                        Align = ColumnSeriesDataLabelsAlign.Right,
                        Format = "{point.y:.1f}",
                        Y = 10
                    },
                    Data = @ViewData["AverageData"] as List<ColumnSeriesData>
                }
            }
        }
        , "chartaverage")
            )
        </div>
    </div>
  <hr />
    <div class="col-md-12">
        <div class="col-md-6">
            @(Html.Highsoft().Highcharts(
              new Highcharts
              {
                Chart = new Chart
                {
                  BackgroundColor = null,
                  PlotBackgroundColor = null,
                  PlotBorderWidth = null,
                  PlotShadow = new Shadow
                  {
                    Enabled = false
                  }
                },
                Title = new Title
                {
                  Text = ""
                },
                Tooltip = new Tooltip
                {
                  BorderColor = null,
                  BorderWidth = null,
                  BorderRadius = null,
                  PointFormat = "{series.name}: <b>{point.percentage:.1f}%</b>"
                },
                PlotOptions = new PlotOptions
                {
                  Pie = new PlotOptionsPie
                  {
                    BorderColor = null,
                    AllowPointSelect = true,
                    Cursor = PlotOptionsPieCursor.Pointer,
                    DataLabels = new PlotOptionsPieDataLabels
                    {
                      Distance = -35,
                      BorderColor = null,
                      BorderWidth = null,
                      BorderRadius = null,
                      Enabled = true,
                      Format = "{point.name}: {point.percentage:.1f} %",
                      Style = new Hashtable
                              {
                                  {
                                      "fontWeight",
                                      "normal"
                                  },
                                  {
                                      "textOutline",
                                      "false"
                                  }
                              }
                    }
                  }
                },
                Series = new List<Series>
                  {
                      new PieSeries
                      {
                          Name = "Percentage",
                          Data = ViewData["PlanData"] as List<PieSeriesData>
                      }
                  }
              }
              , "chartpie")
            )
        </div>
        <div class="col-md-6 detailsviewchart">
            Percent of all plans in this period
        </div>
    </div>
  <hr />
    <div class="col-md-12">
        <div class="col-md-6">
            @Model.LastBought
        </div>
        <div class="col-md-6">
            Last bought
        </div>
    </div>
  <hr />
    <div class="col-md-12">
        <div class="col-md-6 detailsviewnochart">
            Most bought at once
        </div>
        <div class="col-md-6">
          <div class="incremental-counter mostbought" data-value="@Model.MostBoughtAtOnce"></div>
        </div>
    </div>
</div>

<div class="col-md-12" id="detailsdiv">
  <div class="col-md-6">
    <div>
      <h2>@Html.DisplayFor(model => model.Name)</h2>
    </div>
    @if (@Model.ProductCategories.Count > 0)
    {
      <div>
        Categories:
      </div>
    }
    else
    {
      <div>
        No categories found.
      </div>
    }
    <div class="col-md-offset-2">
      @foreach (var category in Model.ProductCategories)
      {
        <li>
          <a asp-controller="Categories" asp-action="Details" asp-route-id="@category.Category.ID">
            @category.Category.Name
          </a>
        </li>
        <br />
      }
    </div>
  </div>
  <div class="col-md-6">
    <div class="detailsbuttonsdiv">
      <a class="btn btn-default" asp-action="Index">Back to List</a><br />
      <a class="btn btn-warning" asp-action="Edit" asp-route-id="@Model.ID">Edit</a><br />
      <a class="btn btn-danger" asp-action="Delete" asp-route-id="@Model.ID">Delete</a><br />
    </div>
  </div>
</div>
<div class="col-md-12">
</div>


<script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
<script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.10.3/jquery-ui.min.js"></script>
<script src="@Url.Content("~/js/tabjs.js")" type="text/javascript"></script>
<script src="/js/jquery.incremental-counter.js"></script>
<script>
  $(".totalspent").incrementalCounter({
    "digits": @Model.TotalSpent.ToString().Length
    });
  $(".timesbought").incrementalCounter({
        "digits": @Model.TimesBought.ToString().Length
    });
  $(".averagecost").incrementalCounter({
        "digits": @Model.AverageCost.ToString().Length
    });
  $(".mostbought").incrementalCounter({
        "digits": @Model.MostBoughtAtOnce.ToString().Length
    });
  $(".amountbought").incrementalCounter({
        "digits": @Model.AmountBought.ToString().Length
    });

</script>